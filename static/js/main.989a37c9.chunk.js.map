{"version":3,"sources":["utils/Array.js","components/Text.js","components/Speed.js","components/Button.js","data/Data.js","models/TextObject.js","pages/texts/Texts.js","components/NavBar.js","pages/typing/Typing.js","pages/start/Start.js","App.js","serviceWorker.js","index.js"],"names":["Array","prototype","replaceAt","index","value","tmp","this","slice","Text","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","elements","IndicateWord","bind","assertThisInitialized","ActiveWord","flag","current","active","elementsArray","wordIterator","i","text","length","isArray","j","push","react_default","a","createElement","key","className","setState","prevProps","mistakes","from","textRef","children","filter","element","nodeName","toLowerCase","scrollIntoView","_this2","ref","Component","Speed","timer","startedTimer","startTime","elapsedTime","wpmSpeed","wpmSpeedWithoutMistakes","cpmSpeed","cpmSpeedWithoutMistakes","Date","Math","max","round","charTyped","_this3","stopped","started","clearInterval","setInterval","tick","Button","classArray","classes","forEach","classList","multipleClassName","onClick","name","data","randomWord","require","TextObject","language","arr","includes","split","array","min","Texts","texts","map","TextBtn_Clicked","e","ReactDOM","render","pages_typing_Typing","document","getElementById","textObj","Fragment","src_components_NavBar","activePage","src_components_Button","NavBar","ClassToActivePage","Btn_ChangePage","pages_texts_Texts","page","Typing","wordsObj","filteredWords","words","randomTextObject","startSpeedCalc","stopSpeedCalc","wordsFiltered","wordsAmount","tmpWord","wordNode","charNode","charWordNode","mistakesArr","fill","mistakeInWordFlag","disableInputFlag","TextAreaOnInput","PreventKeyPressOnInput","PreventTextSelecting","len","target","setSelectionRange","arrows","keyCode","preventDefault","lastIndex","lastChar","should_lastChar","isLastCharEnter","isLastCharSpace","error","console","log","src_components_Text","autoComplete","autoCapitalize","spellCheck","disabled","onInput","onKeyDown","onSelect","src_components_Speed","Start","Btn_StartClicked","App","pages_start_Start","Boolean","window","location","hostname","match","title","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"guEAAAA,MAAMC,UAAUC,UAAY,SAASC,EAAOC,GACxC,IAAIC,EAAMC,KAAKC,MAAM,GAErB,OADAF,EAAIF,GAASC,EACNC,8HC4FIG,iCA3EX,SAAAA,EAAYC,GACZ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAAE,IACIE,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAAT,KAAMG,KACDO,MAAQ,CACTC,SAAU,IAEdP,EAAKQ,aAAeR,EAAKQ,aAAaC,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACpBA,EAAKW,WAAaX,EAAKW,WAAWF,KAAhBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KANtBA,4EAjBaY,GAET,OAAOA,GAEH,KAAK,EACD,MAAO,GACX,KAAK,EACD,MAAO,iBACX,KAAK,EACD,MAAO,qDAGRC,EAASC,GAEhB,OAAQD,IAAYC,EAAS,eAAgB,gEAe7C,IAFA,IAAIC,EAAgB,GAChBC,EAAe,EACXC,EAAI,EAAGA,EAAIrB,KAAKG,MAAMmB,KAAKC,OAAQF,IAEvC,GAAG3B,MAAM8B,QAAQxB,KAAKG,MAAMmB,KAAKD,IACjC,CAEI,IADA,IAAItB,EAAMC,KAAKG,MAAMmB,KAAKD,GAClBI,EAAI,EAAGA,EAAI1B,EAAIwB,OAAQE,IAE3BN,EAAcO,KAAKC,EAAAC,EAAAC,cAAA,QAAMC,IAAK,OAASV,EAAcW,UAAU,QAAQhC,EAAI0B,KAC3EL,IAEJD,EAAcO,KAAKC,EAAAC,EAAAC,cAAA,MAAIC,IAAK,UAAYV,UAIxCD,EAAcO,KAAKC,EAAAC,EAAAC,cAAA,QAAMC,IAAK,OAAST,EAAGU,UAAU,QAAQ/B,KAAKG,MAAMmB,KAAKD,KAC5ED,IAIRpB,KAAKgC,SAAS,CAACrB,SAAUQ,+CAEVc,GAEf,GAAGA,EAAUC,WAAalC,KAAKG,MAAM+B,UAAYD,EAAUf,SAAWlB,KAAKG,MAAMe,OACjF,CACOlB,KAAKG,MAAMe,OAASlB,KAAKG,MAAM+B,SAASX,OAAS,GAC/C7B,MAAMyC,KAAKnC,KAAKoC,QAAQC,UAAWC,OAAO,SAACC,GACxC,MAA2C,OAAnCA,EAAQC,SAASC,gBAC1BzC,KAAKG,MAAMe,QAAQwB,iBAG1B,IAFA,IAAIvB,EAAgB,GAChBC,EAAe,EACXC,EAAI,EAAGA,EAAIrB,KAAKG,MAAMmB,KAAKC,OAAQF,IAEvC,GAAG3B,MAAM8B,QAAQxB,KAAKG,MAAMmB,KAAKD,IACjC,CAEI,IADA,IAAItB,EAAMC,KAAKG,MAAMmB,KAAKD,GAClBI,EAAI,EAAGA,EAAI1B,EAAIwB,OAAQE,IAE3BN,EAAcO,KAAKC,EAAAC,EAAAC,cAAA,QAAMC,IAAK,OAASV,EAAcW,UAAW,QAAU/B,KAAKY,aAAaZ,KAAKG,MAAM+B,SAASd,IAAiB,IAAMpB,KAAKe,WAAWK,EAAcpB,KAAKG,MAAMe,SAAUnB,EAAI0B,KAC9LL,IAEJD,EAAcO,KAAKC,EAAAC,EAAAC,cAAA,MAAIC,IAAK,UAAYT,UAIxCF,EAAcO,KAAKC,EAAAC,EAAAC,cAAA,QAAMC,IAAK,OAAST,EAAGU,UAAW,QAAU/B,KAAKY,aAAaZ,KAAKG,MAAM+B,SAASb,IAAM,IAAMrB,KAAKe,WAAWM,EAAGrB,KAAKG,MAAMe,SAAUlB,KAAKG,MAAMmB,KAAKD,KACzKD,IAGRpB,KAAKgC,SAAS,CAACrB,SAAUQ,sCAIjC,IAAAwB,EAAA3C,KACI,OACI2B,EAAAC,EAAAC,cAAA,OAAKe,IAAK,SAAAA,GAAG,OAAID,EAAKP,QAAUQ,GAAKb,UAAW,gBAAmB/B,KAAKG,MAAM+B,SAASX,SAAWvB,KAAKG,MAAMe,OAAS,4BAA6B,KAC9IlB,KAAKU,MAAMC,iBAtFTkC,cCsEJC,qBA3DX,SAAAA,EAAY3C,GACZ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAA8C,IACI1C,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAAyC,GAAArC,KAAAT,KAAMG,KACDO,MAAQ,CACTqC,MAAO,KACPC,cAAc,EACdC,UAAW,KACXC,YAAa,KACbC,SAAU,EACVC,wBAAyB,EACzBC,SAAU,EACVC,wBAAyB,GAVjClD,sEAVA,IAAAuC,EAAA3C,KACIA,KAAKgC,SAAS,SAACtB,GAAD,MAAY,CACtBwC,aAAc,IAAIK,KAAS7C,EAAMuC,WAAa,IAC9CE,SAAUK,KAAKC,IAAI,EAAGD,KAAKE,OAASf,EAAKxC,MAAMwD,UAAU,EAAKhB,EAAKxC,MAAM+B,UAAUS,EAAKjC,MAAMwC,cAC9FE,wBAAyBI,KAAKC,IAAI,EAAGD,KAAKE,MAAQf,EAAKxC,MAAMwD,UAAU,EAAGhB,EAAKjC,MAAMwC,cACrFG,SAAUG,KAAKC,IAAI,EAAGD,KAAKE,OAAQf,EAAKxC,MAAMwD,UAAUhB,EAAKxC,MAAM+B,UAAUS,EAAKjC,MAAMwC,cACxFI,wBAAyBE,KAAKC,IAAI,EAAGD,KAAKE,MAAQf,EAAKxC,MAAMwD,UAAWhB,EAAKjC,MAAMwC,+EAkB3F,IAAAU,EAAA5D,KAKI,GAJGA,KAAKG,MAAM0D,SAAW7D,KAAKG,MAAM2D,SAEhCC,cAAc/D,KAAKU,MAAMqC,OAE1B/C,KAAKG,MAAM2D,UAAY9D,KAAKU,MAAMsC,eAAiBhD,KAAKG,MAAM0D,QACjE,CACI,IAAId,EAAQiB,YAAY,kBACpBJ,EAAKK,QACL,KACJjE,KAAKgC,SAAS,CACVgB,cAAc,EACdD,MAAOA,EACPE,UAAW,IAAIM,yCAQvB,OACI5B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBAAf,QACU/B,KAAKU,MAAMyC,UAErBxB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBAAf,yBAC2B/B,KAAKU,MAAM0C,0BAG1CzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBAAf,QACU/B,KAAKU,MAAM2C,UAErB1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBAAf,yBAC2B/B,KAAKU,MAAM4C,kCA9DtCT,cCoBLqB,+MAnBOC,GACd,IAAIC,EAAU,MAId,OAHAD,EAAWE,QAAQ,SAAA9B,GACf6B,GAAW,IAAM7B,IAEd6B,mCAIP,IAAIE,EAIJ,OAFIA,EADH5E,MAAM8B,QAAQxB,KAAKG,MAAMiE,SACV,IAAMpE,KAAKG,MAAMiE,QAAQ7C,OAAS,EAAIvB,KAAKuE,kBAAkBvE,KAAKG,MAAMiE,SAAW,GACnF,MAEZzC,EAAAC,EAAAC,cAAA,UAAQE,UAAWuC,EAAWE,QAASxE,KAAKG,MAAMqE,SAAUxE,KAAKG,MAAMsE,aAf9D5B,cCIN6B,EAJJ,aCHLC,EAAaC,EAAQ,IA+BZC,aA7BX,SAAAA,EAAYJ,EAAMnD,EAAMwD,GAGpB,GAFHzE,OAAAC,EAAA,EAAAD,CAAAL,KAAA6E,GACG7E,KAAKyE,KAAOA,EACT/E,MAAM8B,QAAQF,GACjB,CAEI,IADA,IAAIyD,EAAM,GACF1D,EAAI,EAAGA,EAAIC,EAAKC,OAAQF,IAEzBC,EAAKD,GAAG2D,SAAS,KAEhBD,EAAIrD,KAAKJ,EAAKD,GAAG4D,MAAM,MAIvBF,EAAIrD,KAAKJ,EAAKD,IAGtBrB,KAAKsB,KAAOyD,OAGZ/E,KAAKsB,KAAOA,EAAK2D,MAAM,KAC3BjF,KAAKkF,MAAQ5D,EACbtB,KAAK8E,SAAWA,sEAIhB,OAAO,IAAID,EAAW,SAAUF,EAAW,CAACQ,IAAK,GAAI1B,IAAK,KAAM,eCiCzD2B,cAhDb,SAAAA,IACA,IAAAhF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAAoF,IACEhF,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAA+E,GAAA3E,KAAAT,QACKU,MAAQ,CACX2E,MAAOX,EAAKY,IAAI,SAACxF,GACf,OAAO,IAAI+E,EAAW/E,EAAM2E,KAAM3E,EAAMwB,KAAMxB,EAAMgF,aAGxD1E,EAAKmF,gBAAkBnF,EAAKmF,gBAAgB1E,KAArBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAPzBA,+EASgBkB,EAAMkE,GAER,OAATlE,EAEDmE,IAASC,OAAO/D,EAAAC,EAAAC,cAAC8D,EAAD,MAAWC,SAASC,eAAe,SAInDJ,IAASC,OAAO/D,EAAAC,EAAAC,cAAC8D,EAAD,CAAQG,QAASxE,IAASsE,SAASC,eAAe,0CAItE,IAAAlD,EAAA3C,KACE,OACI2B,EAAAC,EAAAC,cAACF,EAAAC,EAAMmE,SAAP,KACIpE,EAAAC,EAAAC,cAACmE,EAAD,CAAQC,WAAW,UACnBtE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACbJ,EAAAC,EAAAC,cAAA,OAAKC,IAAI,iBAAiBC,UAAU,iBAClCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBAAf,eACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,MACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBAAuBJ,EAAAC,EAAAC,cAACqE,EAAD,CAAQzB,KAAK,MAAML,QAAS,CAAC,qBAAsBI,QAAS,kBAAM7B,EAAK4C,gBAAgB,WAE9HvF,KAAKU,MAAM2E,MAAMC,IAAI,SAAC/C,EAAS1C,GAC9B,OACA8B,EAAAC,EAAAC,cAAA,OAAKC,IAAK,WAAajC,EAAOkC,UAAU,iBACtCJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBAAsBQ,EAAQkC,MAC7C9C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAA0BQ,EAAQuC,UACjDnD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBAAuBJ,EAAAC,EAAAC,cAACqE,EAAD,CAAQzB,KAAK,MAAML,QAAS,CAAC,qBAAsBI,QAAS,kBAAM7B,EAAK4C,gBAAgBhD,mBAtC3HM,aCsCLsD,cAzCX,SAAAA,EAAYhG,GACZ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAAmG,IACI/F,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAA8F,GAAA1F,KAAAT,KAAMG,KACDO,MAAQ,CACTuF,WAAY7F,EAAKD,MAAM8F,YAE3B7F,EAAKgG,kBAAoBhG,EAAKgG,kBAAkBvF,KAAvBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACzBA,EAAKiG,eAAiBjG,EAAKiG,eAAexF,KAApBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAN1BA,8EAQemC,GAEX,OAAOA,GAEH,IAAK,SACDkD,IAASC,OAAO/D,EAAAC,EAAAC,cAAC8D,EAAD,MAAWC,SAASC,eAAe,SACnD,MACJ,IAAK,QACDJ,IAASC,OAAO/D,EAAAC,EAAAC,cAACyE,EAAD,MAAUV,SAASC,eAAe,oDAI5CU,GAEd,OAASvG,KAAKG,MAAM8F,aAAeM,EAAO,SAAU,oCAGxD,IAAA5D,EAAA3C,KACI,OACA2B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAd,eACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACXJ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIE,UAAW/B,KAAKoG,kBAAkB,UAAW5B,QAAS,kBAAM7B,EAAK0D,eAAe,YAApF,UACA1E,EAAAC,EAAAC,cAAA,MAAIE,UAAW/B,KAAKoG,kBAAkB,SAAU5B,QAAS,kBAAM7B,EAAK0D,eAAe,WAAnF,mBAlCCxD,aC+ON2D,qBAvEX,SAAAA,EAAYrG,GACZ,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAAwG,GAEI,IAEIC,EAFAC,EAAgB,GAChBC,EAAQ,GAEZ,IAJAvG,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAAmG,GAAA/F,KAAAT,KAAMG,KAIEA,MAAM2F,mBAAmBjB,EACjC,CACI4B,EAAWrG,EAAKD,MAAM2F,QACtB,IAAI,IAAIzE,EAAI,EAAGA,EAAIoF,EAASnF,KAAKC,OAAQF,IAErC,GAAG3B,MAAM8B,QAAQiF,EAASnF,KAAKD,IAC/B,CACI,IAAItB,EAAM0G,EAASnF,KAAKD,GACxBsF,EAAMjF,KAAK,IAAIhC,MAAMK,EAAIwB,SACzB,IAAI,IAAIE,EAAI,EAAGA,EAAI1B,EAAIwB,OAAQE,IAE3BiF,EAAchF,KAAK3B,EAAI0B,IACvBkF,EAAMtF,GAAGI,GAAK1B,EAAI0B,QAKtBiF,EAAchF,KAAK+E,EAASnF,KAAKD,IACjCsF,EAAMjF,KAAK+E,EAASnF,KAAKD,SASjCsF,GADAD,GADAD,EAAW5B,EAAW+B,oBACGtF,KAAKrB,MAAM,IACdA,MAAM,GAhCpC,OAkCIG,EAAKM,MAAQ,CACTmG,gBAAgB,EAChBC,eAAe,EACfH,MAAOA,EACPI,cAAeL,EACfM,YAAaN,EAAcnF,OAC3B0F,QAAS,GACTC,SAAU,EACVC,SAAU,EACVC,aAAc,EACdlF,SAAU,EACVmF,YAAa,IAAI3H,MAAMgH,EAAcnF,QAAQ+F,KAAK,GAClDC,mBAAmB,EACnBC,kBAAkB,GAEtBpH,EAAKqH,gBAAkBrH,EAAKqH,gBAAgB5G,KAArBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACvBA,EAAKsH,uBAAyBtH,EAAKsH,uBAAuB7G,KAA5BR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAC9BA,EAAKuH,qBAAuBvH,EAAKuH,qBAAqB9G,KAA1BR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAnDhCA,oFArKqBoF,GAEjB,IAAIoC,EAA8B,EAAxBpC,EAAEqC,OAAO/H,MAAMyB,OACzBiE,EAAEqC,OAAOC,kBAAkBF,EAAKA,kDAEbpC,GAEnB,IACIuC,EAAS,CAAC,GAAI,GAAI,GAAI,IADV,IAEZvC,EAAEwC,QACFxC,EAAEyC,iBACEzC,EAAEwC,SAAWD,EAAO,IAAMvC,EAAEwC,SAAWD,EAAOA,EAAOxG,OAAS,IAClEiE,EAAEyC,yDAEMzC,GAEZ,IAEQxF,KAAKU,MAAMmG,gBAEX7G,KAAKgC,SAAS,CACV6E,gBAAgB,IAGxB,IAAIqB,EAAY1C,EAAEqC,OAAO/H,MAAMyB,OAAS,EACpC4G,EAAW3C,EAAEqC,OAAO/H,MAAMoI,GAE1BE,EAAkBpI,KAAKU,MAAMqG,cAAc/G,KAAKU,MAAMwG,UAAUlH,KAAKU,MAAM0G,cAC3EiB,EAAgC,OAAbF,EACnBG,EAAgC,MAAbH,EACnBlB,EAAYqB,GAAoBD,EAAiDrI,KAAKU,MAAMuG,QAA1CjH,KAAKU,MAAMuG,QAAUkB,EAC3EnI,KAAKgC,SAAS,SAACtB,GAAD,MAAY,CACtBuG,QAASA,KAEVqB,GAAmBD,GAEdrI,KAAKU,MAAM6G,mBAAqBvH,KAAKU,MAAMqG,cAAc/G,KAAKU,MAAMwG,YAAclH,KAAKU,MAAMuG,QAQ7FjH,KAAKgC,SAAS,SAACtB,GAAD,MAAY,CACtB2G,YAAa3G,EAAM2G,YAAYzH,UAAUc,EAAMwG,SAAU,MAP7DlH,KAAKgC,SAAS,SAACtB,GAAD,MAAY,CACtB2G,YAAa3G,EAAM2G,YAAYzH,UAAUc,EAAMwG,SAAU,MASjElH,KAAKgC,SAAS,SAACtB,GAAD,MAAY,CACtBwG,SAAUxG,EAAMwG,SAAW,EAC3BC,SAAUzG,EAAMyG,SAAW,EAC3BC,aAAc,EACdH,QAAS,GACTM,mBAAmB,OAKpBY,IAAaC,GAEZpI,KAAKgC,SAAS,SAACtB,GAAD,MAAY,CACtBwB,SAAUxB,EAAMwB,SAAW,EAC3BmF,YAAa3G,EAAM2G,YAAYzH,UAAUc,EAAMwG,SAAU,GACzDK,mBAAmB,KAG3BvH,KAAKgC,SAAS,SAACtB,GAAD,MAAY,CACtByG,SAAUzG,EAAMyG,SAAW,EAC3BC,aAAc1G,EAAM0G,aAAe,MAGxCpH,KAAKU,MAAMsG,YAAc,IAAMhH,KAAKU,MAAMwG,UAEtCD,EAAQ1F,SAAWvB,KAAKU,MAAMqG,cAAc/G,KAAKU,MAAMwG,UAAU3F,SAE7D0F,IAAYjH,KAAKU,MAAMqG,cAAc/G,KAAKU,MAAMwG,UAE/ClH,KAAKgC,SAAS,SAACtB,GAAD,MAAY,CACtB2G,YAAa3G,EAAM2G,YAAYzH,UAAUc,EAAMwG,SAAU,GACzDJ,eAAe,EACfU,kBAAkB,EAClBN,SAAUxG,EAAMwG,SAAW,KAK/BlH,KAAKgC,SAAS,SAACtB,GAAD,MAAY,CACtBwB,SAAUxB,EAAMwB,SAAW,EAC3BmF,YAAa3G,EAAM2G,YAAYzH,UAAUc,EAAMwG,SAAU,GACzDJ,eAAe,EACfU,kBAAkB,EAClBN,SAAUxG,EAAMwG,SAAW,MAO/C,MAAMqB,GAEFC,QAAQC,IAAIF,sDAwHhB,OACI5G,EAAAC,EAAAC,cAACF,EAAAC,EAAMmE,SAAP,KACIpE,EAAAC,EAAAC,cAACmE,EAAD,CAAQC,WAAW,WACnBtE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAC6G,EAAD,CAAMxH,OAAQlB,KAAKU,MAAMwG,SAAU5F,KAAMtB,KAAKU,MAAMiG,MAAOzE,SAAUlC,KAAKU,MAAM2G,cAChF1F,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,YAAU8G,aAAa,MAAMC,eAAe,MAAMC,WAAW,QAAQC,SAAU9I,KAAKU,MAAM8G,iBAAkBuB,QAAS/I,KAAKyH,gBAAiBuB,UAAWhJ,KAAK0H,uBAAwBuB,SAAUjJ,KAAK2H,wBAEtMhG,EAAAC,EAAAC,cAACqH,EAAD,CAAOpF,QAAS9D,KAAKU,MAAMmG,eAAgBhD,QAAS7D,KAAKU,MAAMoG,cAAenD,UAAW3D,KAAKU,MAAMyG,SAAUjF,SAAUlC,KAAKU,MAAMwB,oBArOlIW,cCkBNsG,cApBb,SAAAA,IACA,IAAA/I,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAAmJ,IACE/I,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAA8I,GAAA1I,KAAAT,QACKoJ,iBAAmBhJ,EAAKgJ,iBAAiBvI,KAAtBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAF1BA,kFAMEqF,IAASC,OAAO/D,EAAAC,EAAAC,cAAC8D,EAAD,MAAWC,SAASC,eAAe,0CAGnD,OACElE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,uBAAd,eACAJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,8BAAjB,mBACAJ,EAAAC,EAAAC,cAACqE,EAAD,CAAQzB,KAAK,QAAQL,QAAS,CAAC,cAAeI,QAASxE,KAAKoJ,2BAfhDvG,aCaLwG,cAfX,SAAAA,EAAYlJ,GACZ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAL,KAAAqJ,IACIjJ,EAAAC,OAAAE,EAAA,EAAAF,CAAAL,KAAAK,OAAAG,EAAA,EAAAH,CAAAgJ,GAAA5I,KAAAT,KAAMG,KACDO,MAAQ,CACTuF,WAAY7F,EAAKD,MAAMoG,MAH/BnG,wEAOA,MAA6B,gBAA1BJ,KAAKU,MAAMuF,WACHtE,EAAAC,EAAAC,cAACyH,EAAD,MAEA3H,EAAAC,EAAAC,cAAC8D,EAAD,aAZG9C,aCOE0G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVN/D,SAASgE,MAAQ,cACjBnE,IAASC,OAAO/D,EAAAC,EAAAC,cAACgI,EAAD,CAAKtD,KAAK,gBAAiBX,SAASC,eAAe,SDwH7D,kBAAmBiE,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.989a37c9.chunk.js","sourcesContent":["Array.prototype.replaceAt = function(index, value){\r\n    var tmp = this.slice(0);\r\n    tmp[index] = value;\r\n    return tmp;\r\n};","import React, { Component } from 'react';\r\nimport './Text.scss';\r\n\r\nclass Text extends Component {\r\n    IndicateWord(flag)\r\n    {\r\n        switch(flag)\r\n        {\r\n            case 0:\r\n                return \"\";\r\n            case 1:\r\n                return \"word--negative\";\r\n            case 2:\r\n                return \"word--positive\";\r\n        }\r\n    }\r\n    ActiveWord(current, active)\r\n    {\r\n        return (current === active)? \"word--active\": \"\";\r\n    }\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            elements: [],\r\n        };\r\n        this.IndicateWord = this.IndicateWord.bind(this);\r\n        this.ActiveWord = this.ActiveWord.bind(this);\r\n    }\r\n    componentDidMount()\r\n    {\r\n        var elementsArray = [];\r\n        var wordIterator = 0;\r\n        for(var i = 0; i < this.props.text.length; i++)\r\n        {\r\n            if(Array.isArray(this.props.text[i]))\r\n            {\r\n                var tmp = this.props.text[i];\r\n                for(var j = 0; j < tmp.length; j++)\r\n                {\r\n                    elementsArray.push(<span key={\"word\" + wordIterator} className=\"word\">{tmp[j]}</span>);\r\n                    wordIterator++;\r\n                }\r\n                elementsArray.push(<br key={\"newline\" + wordIterator}/>);\r\n            }\r\n            else\r\n            {\r\n                elementsArray.push(<span key={\"word\" + i} className=\"word\">{this.props.text[i]}</span>);\r\n                wordIterator++;\r\n            }\r\n            \r\n        }\r\n        this.setState({elements: elementsArray});\r\n    }\r\n    componentDidUpdate(prevProps)\r\n    {\r\n        if(prevProps.mistakes !== this.props.mistakes || prevProps.active !== this.props.active)\r\n        {\r\n            if(this.props.active < this.props.mistakes.length - 1)\r\n                (Array.from(this.textRef.children)).filter((element) => {\r\n                    return (element.nodeName.toLowerCase() !== \"br\");\r\n                })[this.props.active].scrollIntoView();\r\n            var elementsArray = [];\r\n            var wordIterator = 0;\r\n            for(var i = 0; i < this.props.text.length; i++)\r\n            {\r\n                if(Array.isArray(this.props.text[i]))\r\n                {\r\n                    var tmp = this.props.text[i];\r\n                    for(var j = 0; j < tmp.length; j++)\r\n                    {\r\n                        elementsArray.push(<span key={\"word\" + wordIterator} className={\"word \" + this.IndicateWord(this.props.mistakes[wordIterator]) + \" \" + this.ActiveWord(wordIterator, this.props.active)}>{tmp[j]}</span>);\r\n                        wordIterator++;\r\n                    }\r\n                    elementsArray.push(<br key={\"newline\" + i}/>);\r\n                }\r\n                else\r\n                {\r\n                    elementsArray.push(<span key={\"word\" + i} className={\"word \" + this.IndicateWord(this.props.mistakes[i]) + \" \" + this.ActiveWord(i, this.props.active)}>{this.props.text[i]}</span>);\r\n                    wordIterator++;\r\n                }\r\n            }\r\n            this.setState({elements: elementsArray});\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div ref={ref => this.textRef = ref} className={\"typing__text\" + ((this.props.mistakes.length === this.props.active)? \" typing__text--scrollable\": \"\")}>\r\n                {this.state.elements}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Text;","import React, { Component } from 'react';\r\nimport './Speed.scss';\r\n\r\nclass Speed extends Component {\r\n    tick()\r\n    {\r\n        this.setState((state) => ({\r\n            elapsedTime: (new Date() - state.startTime) / 60000,\r\n            wpmSpeed: Math.max(0, Math.round((((this.props.charTyped/5) - this.props.mistakes)/this.state.elapsedTime))),\r\n            wpmSpeedWithoutMistakes: Math.max(0, Math.round(((this.props.charTyped/5)/this.state.elapsedTime))),\r\n            cpmSpeed: Math.max(0, Math.round(((this.props.charTyped-this.props.mistakes)/this.state.elapsedTime))),\r\n            cpmSpeedWithoutMistakes: Math.max(0, Math.round(((this.props.charTyped)/this.state.elapsedTime)))\r\n        }));\r\n    }\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            timer: null,\r\n            startedTimer: false,\r\n            startTime: null,\r\n            elapsedTime: null,\r\n            wpmSpeed: 0,\r\n            wpmSpeedWithoutMistakes: 0,\r\n            cpmSpeed: 0,\r\n            cpmSpeedWithoutMistakes: 0\r\n        }\r\n    }\r\n    componentDidUpdate()\r\n    {\r\n        if(this.props.stopped && this.props.started)\r\n        {\r\n            clearInterval(this.state.timer);\r\n        }\r\n        if(this.props.started && !this.state.startedTimer && !this.props.stopped)\r\n        {\r\n            var timer = setInterval(() => \r\n                this.tick(),\r\n                1000);\r\n            this.setState({\r\n                startedTimer: true,\r\n                timer: timer,\r\n                startTime: new Date()\r\n            });\r\n            \r\n            \r\n        } \r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"typing__speed\">\r\n                <div className=\"typing__speed-wpm\">\r\n                    <div className=\"typing__speed-single\">\r\n                        WPM: {this.state.wpmSpeed}\r\n                    </div>\r\n                    <div className=\"typing__speed-single\">\r\n                        WPM without mistakes: {this.state.wpmSpeedWithoutMistakes}\r\n                    </div>\r\n                </div>\r\n                <div className=\"typing__speed-cpm\">\r\n                    <div className=\"typing__speed-single\">\r\n                        CPM: {this.state.cpmSpeed}\r\n                    </div>\r\n                    <div className=\"typing__speed-single\">\r\n                        CPM without mistakes: {this.state.cpmSpeedWithoutMistakes}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Speed;","import React, { Component } from 'react';\r\nimport './Button.scss';\r\n\r\nclass Button extends Component {\r\n    multipleClassName(classArray) {\r\n        var classes = \"btn\";\r\n        classArray.forEach(element => {\r\n            classes += \" \" + element;\r\n        });\r\n        return classes;\r\n    }\r\n    render()\r\n    {\r\n        var classList;\r\n        (Array.isArray(this.props.classes)) ?\r\n            classList = \" \" + this.props.classes.length > 0 ? this.multipleClassName(this.props.classes) : \"\":\r\n            classList = \"btn\";\r\n        return(\r\n            <button className={classList} onClick={this.props.onClick}>{this.props.name}</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Button;","import pantadeusz from './pantadeusz.json';\r\nimport themysteriousisland from './themysteriousisland.json'\r\n\r\nvar data = [\r\n    pantadeusz,\r\n    themysteriousisland\r\n];\r\nexport default data;\r\n","const randomWord = require(\"random-words\");\r\nclass TextObject{\r\n    constructor(name, text, language)\r\n    {\r\n        this.name = name;\r\n        if(Array.isArray(text))\r\n        {\r\n            var arr = [];\r\n            for(var i = 0; i < text.length; i++)\r\n            {\r\n                if(text[i].includes(\" \"))\r\n                {\r\n                    arr.push(text[i].split(\" \"));\r\n                }\r\n                else\r\n                {\r\n                    arr.push(text[i]);\r\n                } \r\n            }\r\n            this.text = arr;\r\n        }\r\n        else\r\n            this.text = text.split(\" \");\r\n        this.array = text;\r\n        this.language = language;\r\n    }\r\n    static randomTextObject()\r\n    {\r\n        return new TextObject(\"random\", randomWord({min: 15, max: 30}), \"EN\");\r\n    }\r\n}\r\nexport default TextObject;","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Texts.scss';\r\n\r\nimport NavBar from '../../components/NavBar';\r\nimport Button from '../../components/Button';\r\n\r\nimport data from '../../data/Data';\r\nimport TextObject from '../../models/TextObject';\r\nimport Typing from '../typing/Typing';\r\n\r\n\r\nclass Texts extends Component {\r\n  constructor()\r\n  {\r\n    super();\r\n    this.state = {\r\n      texts: data.map((value) => {\r\n        return new TextObject(value.name, value.text, value.language);\r\n      })\r\n    };\r\n    this.TextBtn_Clicked = this.TextBtn_Clicked.bind(this);\r\n  }\r\n  TextBtn_Clicked(text, e)\r\n  {\r\n    if(text === null)\r\n    {\r\n      ReactDOM.render(<Typing/>, document.getElementById('root'));\r\n    }\r\n    else\r\n    {\r\n      ReactDOM.render(<Typing textObj={text}/>, document.getElementById('root'));\r\n    }\r\n  }\r\n  render() \r\n  {\r\n    return (\r\n        <React.Fragment>\r\n            <NavBar activePage=\"Texts\"/>\r\n            <div className=\"textsList\">\r\n              <div key=\"fragmentrandom\" className=\"texts__single\">\r\n                <div className=\"texts__single-name\">Random Word</div>\r\n                <div className=\"texts__single-language\">EN</div>\r\n                <div className=\"texts__single-button\"><Button name=\"USE\" classes={[\"texts__single-btn\"]} onClick={() => this.TextBtn_Clicked(null)}></Button></div>\r\n              </div>\r\n              {this.state.texts.map((element, index) => {\r\n                return (\r\n                <div key={\"fragment\" + index} className=\"texts__single\">\r\n                  <div className=\"texts__single-name\">{element.name}</div>\r\n                  <div className=\"texts__single-language\">{element.language}</div>\r\n                  <div className=\"texts__single-button\"><Button name=\"USE\" classes={[\"texts__single-btn\"]} onClick={() => this.TextBtn_Clicked(element)}></Button></div>\r\n                </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Texts;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './NavBar.scss';\r\n\r\nimport Texts from '../pages/texts/Texts';\r\nimport Typing from '../pages/typing/Typing';\r\n\r\n\r\nclass NavBar extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePage: this.props.activePage\r\n        };\r\n        this.ClassToActivePage = this.ClassToActivePage.bind(this);\r\n        this.Btn_ChangePage = this.Btn_ChangePage.bind(this);\r\n    }\r\n    Btn_ChangePage(element)\r\n    {\r\n        switch(element)\r\n        {\r\n            case \"Typing\":\r\n                ReactDOM.render(<Typing/>, document.getElementById('root'));\r\n                break;\r\n            case \"Texts\":\r\n                ReactDOM.render(<Texts/>, document.getElementById('root'));\r\n                break;\r\n        }\r\n    }\r\n    ClassToActivePage(page)\r\n    {\r\n        return ((this.props.activePage === page)? \"active\": \"\");\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n        <div className=\"nav\">\r\n            <h2 className=\"nav__logo\">TypingSpeed</h2>\r\n            <div className=\"nav__menu\">\r\n                <ul>\r\n                    <li className={this.ClassToActivePage(\"Typing\")} onClick={() => this.Btn_ChangePage(\"Typing\")}>Typing</li>\r\n                    <li className={this.ClassToActivePage(\"Texts\")} onClick={() => this.Btn_ChangePage(\"Texts\")}>Texts</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport './Typing.scss';\r\n\r\nimport Text from '../../components/Text';\r\nimport Speed from '../../components/Speed';\r\n\r\nimport NavBar from '../../components/NavBar';\r\n\r\nimport TextObject from '../../models/TextObject';\r\nimport '../../utils/Array';\r\n\r\nclass Typing extends Component {\r\n    PreventTextSelecting(e)\r\n    {\r\n        var len = e.target.value.length * 2;\r\n        e.target.setSelectionRange(len, len);\r\n    }\r\n    PreventKeyPressOnInput(e)\r\n    {\r\n        var backspace = 8;\r\n        var arrows = [37, 38, 39, 40];\r\n        if (e.keyCode === backspace)\r\n            e.preventDefault();\r\n        else if(e.keyCode >= arrows[0] && e.keyCode <= arrows[arrows.length - 1])\r\n            e.preventDefault();\r\n    }\r\n    TextAreaOnInput(e)\r\n    {\r\n        try\r\n        {\r\n            if(!this.state.startSpeedCalc)\r\n            {\r\n                this.setState({\r\n                    startSpeedCalc: true\r\n                });\r\n            }\r\n            var lastIndex = e.target.value.length - 1;\r\n            var lastChar = e.target.value[lastIndex];\r\n\r\n            var should_lastChar = this.state.wordsFiltered[this.state.wordNode][this.state.charWordNode];\r\n            var isLastCharEnter = (lastChar === \"\\n\")? true: false;\r\n            var isLastCharSpace = (lastChar === \" \")? true: false;\r\n            var tmpWord = (!isLastCharSpace || !isLastCharEnter)? this.state.tmpWord + lastChar: this.state.tmpWord;\r\n            this.setState((state) => ({\r\n                tmpWord: tmpWord\r\n            }));\r\n            if(isLastCharSpace || isLastCharEnter)\r\n            {\r\n                if(!this.state.mistakeInWordFlag && this.state.wordsFiltered[this.state.wordNode] === this.state.tmpWord)\r\n                {\r\n                    this.setState((state) => ({\r\n                        mistakesArr: state.mistakesArr.replaceAt(state.wordNode, 2)\r\n                    }));\r\n                }\r\n                else\r\n                {\r\n                    this.setState((state) => ({\r\n                        mistakesArr: state.mistakesArr.replaceAt(state.wordNode, 1)\r\n                    }));\r\n                }\r\n                this.setState((state) => ({\r\n                    wordNode: state.wordNode + 1,\r\n                    charNode: state.charNode + 1,\r\n                    charWordNode: 0,\r\n                    tmpWord: \"\",\r\n                    mistakeInWordFlag: false\r\n                }));\r\n            }\r\n            else\r\n            {\r\n                if(lastChar !== should_lastChar)\r\n                {\r\n                    this.setState((state) => ({\r\n                        mistakes: state.mistakes + 1,\r\n                        mistakesArr: state.mistakesArr.replaceAt(state.wordNode, 1),\r\n                        mistakeInWordFlag: true\r\n                    }));\r\n                }\r\n                this.setState((state) => ({\r\n                    charNode: state.charNode + 1,\r\n                    charWordNode: state.charWordNode + 1\r\n                }));\r\n            }\r\n            if(this.state.wordsAmount - 1 === this.state.wordNode)\r\n            {\r\n                if(tmpWord.length === this.state.wordsFiltered[this.state.wordNode].length)\r\n                {\r\n                    if(tmpWord === this.state.wordsFiltered[this.state.wordNode])\r\n                    {\r\n                        this.setState((state) => ({\r\n                            mistakesArr: state.mistakesArr.replaceAt(state.wordNode, 2),\r\n                            stopSpeedCalc: true,\r\n                            disableInputFlag: true,\r\n                            wordNode: state.wordNode + 1\r\n                        }));\r\n                    }\r\n                    else\r\n                    {\r\n                        this.setState((state) => ({\r\n                            mistakes: state.mistakes + 1,\r\n                            mistakesArr: state.mistakesArr.replaceAt(state.wordNode, 1),\r\n                            stopSpeedCalc: true,\r\n                            disableInputFlag: true,\r\n                            wordNode: state.wordNode + 1\r\n                        }));\r\n                    }\r\n                }\r\n                \r\n            }\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error);\r\n        }\r\n    }\r\n    // TextAreaOnInput(e)\r\n    // {\r\n    //     if(!this.state.startSpeedCalc)\r\n    //     {\r\n    //         this.setState(\r\n    //         {\r\n    //             startSpeedCalc: true\r\n    //         });\r\n    //     }\r\n    //     var lastIndex = e.target.value.length - 1;\r\n    //     var lastChar = e.target.value[lastIndex];\r\n    //     this.setState((state) => ({\r\n    //         tmpWord: state.tmpWord + lastChar\r\n    //     }))\r\n    //     var isLastCharSpace = (lastChar == \" \");\r\n    //     if(isLastCharSpace ||  (this.state.words.length - 1 == this.state.wordNode && this.state.charWordNode == this.state.words[this.state.wordNode].length - 1))\r\n    //     {\r\n    //         if(this.state.mistakeInWordFlag == false || this.state.words[this.state.wordNode - 1] !== this.state.tmpWord)\r\n    //         {\r\n    //             this.setState((state) => ({\r\n    //                 mistakesArr: state.mistakesArr.replaceAt(state.wordNode, 2)\r\n    //             }));\r\n    //         }\r\n    //         this.setState((state) => ({\r\n    //             charNode: state.charNode + 1,\r\n    //             wordNode: state.wordNode + 1,\r\n    //             charWordNode: 0,\r\n    //             mistakeInWordFlag: false\r\n    //         }));\r\n    //         if(this.state.words.length - 1 == this.state.wordNode && this.state.charWordNode == this.state.words[this.state.wordNode].length - 1)\r\n    //         {\r\n    //             this.setState({\r\n    //                 stopSpeedCalc: true,\r\n    //                 disableInputFlag: true\r\n    //             });\r\n    //         }\r\n    //         this.setState({\r\n    //             tmpWord: \"\"\r\n    //         })\r\n    //     }\r\n    //     else\r\n    //     {\r\n    //         if(lastChar == this.state.words[this.state.wordNode][this.state.charWordNode])\r\n    //         {\r\n    //             this.setState((state) => ({\r\n    //                 charNode: state.charNode + 1,\r\n    //                 charWordNode: state.charWordNode + 1\r\n    //             }));\r\n    //         }\r\n    //         else\r\n    //         {\r\n    //             this.setState((state) => ({\r\n    //                 mistakesArr: state.mistakesArr.replaceAt(state.wordNode, 1),\r\n    //                 mistakes: state.mistakes + 1,\r\n    //                 charNode: state.charNode + 1,\r\n    //                 charWordNode: state.charWordNode + 1,\r\n    //                 mistakeInWordFlag: true\r\n    //             }));\r\n    //         }\r\n    //     }\r\n    // }\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        var filteredWords = [];\r\n        var words = [];\r\n        var wordsObj;\r\n        if(this.props.textObj instanceof TextObject)\r\n        {\r\n            wordsObj = this.props.textObj;\r\n            for(var i = 0; i < wordsObj.text.length; i++)\r\n            {\r\n                if(Array.isArray(wordsObj.text[i]))\r\n                {\r\n                    var tmp = wordsObj.text[i];\r\n                    words.push(new Array(tmp.length));\r\n                    for(var j = 0; j < tmp.length; j++)\r\n                    {\r\n                        filteredWords.push(tmp[j]);\r\n                        words[i][j] = tmp[j];\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    filteredWords.push(wordsObj.text[i]);\r\n                    words.push(wordsObj.text[i]);\r\n                }\r\n                \r\n            }\r\n        }\r\n        else\r\n        {\r\n            wordsObj = TextObject.randomTextObject();\r\n            filteredWords = wordsObj.text.slice(0);\r\n            words = filteredWords.slice(0);\r\n        }\r\n        this.state = {\r\n            startSpeedCalc: false,\r\n            stopSpeedCalc: false,\r\n            words: words,\r\n            wordsFiltered: filteredWords,\r\n            wordsAmount: filteredWords.length,\r\n            tmpWord: \"\",\r\n            wordNode: 0,\r\n            charNode: 0,\r\n            charWordNode: 0,\r\n            mistakes: 0,\r\n            mistakesArr: new Array(filteredWords.length).fill(0),\r\n            mistakeInWordFlag: false,\r\n            disableInputFlag: false\r\n        };\r\n        this.TextAreaOnInput = this.TextAreaOnInput.bind(this);\r\n        this.PreventKeyPressOnInput = this.PreventKeyPressOnInput.bind(this);\r\n        this.PreventTextSelecting = this.PreventTextSelecting.bind(this);\r\n    }\r\n    render() \r\n    {\r\n        return(\r\n            <React.Fragment>\r\n                <NavBar activePage=\"Typing\"/>        \r\n                <div className=\"typing\">\r\n                    <Text active={this.state.wordNode} text={this.state.words} mistakes={this.state.mistakesArr}/>\r\n                    <div className=\"typing__textarea\">\r\n                        <textarea autoComplete=\"off\" autoCapitalize=\"off\" spellCheck=\"false\" disabled={this.state.disableInputFlag} onInput={this.TextAreaOnInput} onKeyDown={this.PreventKeyPressOnInput} onSelect={this.PreventTextSelecting}/>\r\n                    </div>\r\n                    <Speed started={this.state.startSpeedCalc} stopped={this.state.stopSpeedCalc} charTyped={this.state.charNode} mistakes={this.state.mistakes}/>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Typing;\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Start.scss';\n\nimport Typing from '../typing/Typing';\n\nimport Button from '../../components/Button';\n\nclass Start extends Component {\n  constructor()\n  {\n    super();\n    this.Btn_StartClicked = this.Btn_StartClicked.bind(this);\n  }\n  Btn_StartClicked()\n  {\n    ReactDOM.render(<Typing/>, document.getElementById(\"root\"));\n  }\n  render() {\n    return (\n      <div className=\"startScreen\">\n        <h1 className=\"startScreen__header\">TypingSpeed</h1>\n        <small className=\"startScreen__header-author\">by DawiDeX-Zero</small>\n        <Button name=\"Start\" classes={['btn--start']} onClick={this.Btn_StartClicked}/>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","import React, { Component } from 'react';\r\n\r\nimport Start from './pages/start/Start';\r\nimport Typing from './pages/typing/Typing';\r\n\r\nclass App extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePage: this.props.page\r\n        };\r\n    }\r\n  render(){\r\n    if(this.state.activePage === \"StartScreen\")\r\n        return(<Start/>);\r\n    else\r\n        return(<Typing/>);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\ndocument.title = \"TypingSpeed\";\nReactDOM.render(<App page=\"StartScreen\"/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}